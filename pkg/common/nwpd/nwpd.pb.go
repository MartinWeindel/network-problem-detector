//
// SPDX-FileCopyrightText: 2022 SAP SE or an SAP affiliate company and Gardener contributors
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: pkg/common/nwpd/nwpd.proto

package nwpd

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetObservationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start               *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End                 *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	Limit               int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	RestrictToJobIDs    []string               `protobuf:"bytes,4,rep,name=restrictToJobIDs,proto3" json:"restrictToJobIDs,omitempty"`
	RestrictToSrcHosts  []string               `protobuf:"bytes,5,rep,name=restrictToSrcHosts,proto3" json:"restrictToSrcHosts,omitempty"`
	RestrictToDestHosts []string               `protobuf:"bytes,6,rep,name=restrictToDestHosts,proto3" json:"restrictToDestHosts,omitempty"`
	AggregationWindow   *durationpb.Duration   `protobuf:"bytes,7,opt,name=aggregationWindow,proto3" json:"aggregationWindow,omitempty"`
	FailuresOnly        bool                   `protobuf:"varint,8,opt,name=failuresOnly,proto3" json:"failuresOnly,omitempty"`
}

func (x *GetObservationsRequest) Reset() {
	*x = GetObservationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_common_nwpd_nwpd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObservationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObservationsRequest) ProtoMessage() {}

func (x *GetObservationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_nwpd_nwpd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObservationsRequest.ProtoReflect.Descriptor instead.
func (*GetObservationsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_common_nwpd_nwpd_proto_rawDescGZIP(), []int{0}
}

func (x *GetObservationsRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GetObservationsRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *GetObservationsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetObservationsRequest) GetRestrictToJobIDs() []string {
	if x != nil {
		return x.RestrictToJobIDs
	}
	return nil
}

func (x *GetObservationsRequest) GetRestrictToSrcHosts() []string {
	if x != nil {
		return x.RestrictToSrcHosts
	}
	return nil
}

func (x *GetObservationsRequest) GetRestrictToDestHosts() []string {
	if x != nil {
		return x.RestrictToDestHosts
	}
	return nil
}

func (x *GetObservationsRequest) GetAggregationWindow() *durationpb.Duration {
	if x != nil {
		return x.AggregationWindow
	}
	return nil
}

func (x *GetObservationsRequest) GetFailuresOnly() bool {
	if x != nil {
		return x.FailuresOnly
	}
	return false
}

type GetObservationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Observations []*Observation `protobuf:"bytes,1,rep,name=observations,proto3" json:"observations,omitempty"`
}

func (x *GetObservationsResponse) Reset() {
	*x = GetObservationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_common_nwpd_nwpd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObservationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObservationsResponse) ProtoMessage() {}

func (x *GetObservationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_nwpd_nwpd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObservationsResponse.ProtoReflect.Descriptor instead.
func (*GetObservationsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_common_nwpd_nwpd_proto_rawDescGZIP(), []int{1}
}

func (x *GetObservationsResponse) GetObservations() []*Observation {
	if x != nil {
		return x.Observations
	}
	return nil
}

type GetAggregatedObservationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AggregatedObservations []*AggregatedObservation `protobuf:"bytes,1,rep,name=aggregatedObservations,proto3" json:"aggregatedObservations,omitempty"`
}

func (x *GetAggregatedObservationsResponse) Reset() {
	*x = GetAggregatedObservationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_common_nwpd_nwpd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAggregatedObservationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAggregatedObservationsResponse) ProtoMessage() {}

func (x *GetAggregatedObservationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_nwpd_nwpd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAggregatedObservationsResponse.ProtoReflect.Descriptor instead.
func (*GetAggregatedObservationsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_common_nwpd_nwpd_proto_rawDescGZIP(), []int{2}
}

func (x *GetAggregatedObservationsResponse) GetAggregatedObservations() []*AggregatedObservation {
	if x != nil {
		return x.AggregatedObservations
	}
	return nil
}

type AggregatedObservation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcHost        string                          `protobuf:"bytes,1,opt,name=srcHost,proto3" json:"srcHost,omitempty"`
	DestHost       string                          `protobuf:"bytes,2,opt,name=destHost,proto3" json:"destHost,omitempty"`
	PeriodStart    *timestamppb.Timestamp          `protobuf:"bytes,3,opt,name=periodStart,proto3" json:"periodStart,omitempty"`
	PeriodEnd      *timestamppb.Timestamp          `protobuf:"bytes,4,opt,name=periodEnd,proto3" json:"periodEnd,omitempty"`
	JobsOkCount    map[string]int32                `protobuf:"bytes,5,rep,name=jobsOkCount,proto3" json:"jobsOkCount,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	JobsNotOkCount map[string]int32                `protobuf:"bytes,6,rep,name=jobsNotOkCount,proto3" json:"jobsNotOkCount,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	MeanOkDuration map[string]*durationpb.Duration `protobuf:"bytes,7,rep,name=meanOkDuration,proto3" json:"meanOkDuration,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AggregatedObservation) Reset() {
	*x = AggregatedObservation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_common_nwpd_nwpd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregatedObservation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatedObservation) ProtoMessage() {}

func (x *AggregatedObservation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_nwpd_nwpd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatedObservation.ProtoReflect.Descriptor instead.
func (*AggregatedObservation) Descriptor() ([]byte, []int) {
	return file_pkg_common_nwpd_nwpd_proto_rawDescGZIP(), []int{3}
}

func (x *AggregatedObservation) GetSrcHost() string {
	if x != nil {
		return x.SrcHost
	}
	return ""
}

func (x *AggregatedObservation) GetDestHost() string {
	if x != nil {
		return x.DestHost
	}
	return ""
}

func (x *AggregatedObservation) GetPeriodStart() *timestamppb.Timestamp {
	if x != nil {
		return x.PeriodStart
	}
	return nil
}

func (x *AggregatedObservation) GetPeriodEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.PeriodEnd
	}
	return nil
}

func (x *AggregatedObservation) GetJobsOkCount() map[string]int32 {
	if x != nil {
		return x.JobsOkCount
	}
	return nil
}

func (x *AggregatedObservation) GetJobsNotOkCount() map[string]int32 {
	if x != nil {
		return x.JobsNotOkCount
	}
	return nil
}

func (x *AggregatedObservation) GetMeanOkDuration() map[string]*durationpb.Duration {
	if x != nil {
		return x.MeanOkDuration
	}
	return nil
}

type Observation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobID     string                 `protobuf:"bytes,1,opt,name=jobID,proto3" json:"jobID,omitempty"`
	SrcHost   string                 `protobuf:"bytes,2,opt,name=srcHost,proto3" json:"srcHost,omitempty"`
	DestHost  string                 `protobuf:"bytes,3,opt,name=destHost,proto3" json:"destHost,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Duration  *durationpb.Duration   `protobuf:"bytes,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Result    string                 `protobuf:"bytes,6,opt,name=result,proto3" json:"result,omitempty"` // not persisted
	Ok        bool                   `protobuf:"varint,7,opt,name=ok,proto3" json:"ok,omitempty"`
	Period    *durationpb.Duration   `protobuf:"bytes,8,opt,name=period,proto3" json:"period,omitempty"`
}

func (x *Observation) Reset() {
	*x = Observation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_common_nwpd_nwpd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Observation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Observation) ProtoMessage() {}

func (x *Observation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_nwpd_nwpd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Observation.ProtoReflect.Descriptor instead.
func (*Observation) Descriptor() ([]byte, []int) {
	return file_pkg_common_nwpd_nwpd_proto_rawDescGZIP(), []int{4}
}

func (x *Observation) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

func (x *Observation) GetSrcHost() string {
	if x != nil {
		return x.SrcHost
	}
	return ""
}

func (x *Observation) GetDestHost() string {
	if x != nil {
		return x.DestHost
	}
	return ""
}

func (x *Observation) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Observation) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *Observation) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *Observation) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *Observation) GetPeriod() *durationpb.Duration {
	if x != nil {
		return x.Period
	}
	return nil
}

type IntObservation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobID          int64 `protobuf:"varint,1,opt,name=JobID,proto3" json:"JobID,omitempty"`
	SrcHost        int64 `protobuf:"varint,2,opt,name=srcHost,proto3" json:"srcHost,omitempty"`
	DestHost       int64 `protobuf:"varint,3,opt,name=destHost,proto3" json:"destHost,omitempty"`
	TimeMillis     int64 `protobuf:"varint,4,opt,name=timeMillis,proto3" json:"timeMillis,omitempty"`
	DurationMillis int32 `protobuf:"varint,5,opt,name=durationMillis,proto3" json:"durationMillis,omitempty"`
	Ok             bool  `protobuf:"varint,6,opt,name=ok,proto3" json:"ok,omitempty"`
	PeriodMillis   int32 `protobuf:"varint,7,opt,name=periodMillis,proto3" json:"periodMillis,omitempty"`
}

func (x *IntObservation) Reset() {
	*x = IntObservation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_common_nwpd_nwpd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntObservation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntObservation) ProtoMessage() {}

func (x *IntObservation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_nwpd_nwpd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntObservation.ProtoReflect.Descriptor instead.
func (*IntObservation) Descriptor() ([]byte, []int) {
	return file_pkg_common_nwpd_nwpd_proto_rawDescGZIP(), []int{5}
}

func (x *IntObservation) GetJobID() int64 {
	if x != nil {
		return x.JobID
	}
	return 0
}

func (x *IntObservation) GetSrcHost() int64 {
	if x != nil {
		return x.SrcHost
	}
	return 0
}

func (x *IntObservation) GetDestHost() int64 {
	if x != nil {
		return x.DestHost
	}
	return 0
}

func (x *IntObservation) GetTimeMillis() int64 {
	if x != nil {
		return x.TimeMillis
	}
	return 0
}

func (x *IntObservation) GetDurationMillis() int32 {
	if x != nil {
		return x.DurationMillis
	}
	return 0
}

func (x *IntObservation) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *IntObservation) GetPeriodMillis() int32 {
	if x != nil {
		return x.PeriodMillis
	}
	return 0
}

type Int64Arrays struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Array []int64 `protobuf:"varint,1,rep,packed,name=array,proto3" json:"array,omitempty"`
}

func (x *Int64Arrays) Reset() {
	*x = Int64Arrays{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_common_nwpd_nwpd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int64Arrays) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int64Arrays) ProtoMessage() {}

func (x *Int64Arrays) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_nwpd_nwpd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int64Arrays.ProtoReflect.Descriptor instead.
func (*Int64Arrays) Descriptor() ([]byte, []int) {
	return file_pkg_common_nwpd_nwpd_proto_rawDescGZIP(), []int{6}
}

func (x *Int64Arrays) GetArray() []int64 {
	if x != nil {
		return x.Array
	}
	return nil
}

type IntString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   int64  `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *IntString) Reset() {
	*x = IntString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_common_nwpd_nwpd_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntString) ProtoMessage() {}

func (x *IntString) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_nwpd_nwpd_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntString.ProtoReflect.Descriptor instead.
func (*IntString) Descriptor() ([]byte, []int) {
	return file_pkg_common_nwpd_nwpd_proto_rawDescGZIP(), []int{7}
}

func (x *IntString) GetKey() int64 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *IntString) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_pkg_common_nwpd_nwpd_proto protoreflect.FileDescriptor

var file_pkg_common_nwpd_nwpd_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6e, 0x77, 0x70,
	0x64, 0x2f, 0x6e, 0x77, 0x70, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6e, 0x77,
	0x70, 0x64, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x89, 0x03, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x54, 0x6f, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10,
	0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x54, 0x6f, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x73,
	0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x54, 0x6f, 0x53, 0x72,
	0x63, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x54, 0x6f, 0x53, 0x72, 0x63, 0x48, 0x6f, 0x73, 0x74, 0x73,
	0x12, 0x30, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x54, 0x6f, 0x44, 0x65,
	0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x72,
	0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x54, 0x6f, 0x44, 0x65, 0x73, 0x74, 0x48, 0x6f, 0x73,
	0x74, 0x73, 0x12, 0x47, 0x0a, 0x11, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x22, 0x0a, 0x0c, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x22,
	0x50, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x6f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6e, 0x77, 0x70, 0x64, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x78, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x64, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x16, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x64, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x77, 0x70, 0x64, 0x2e, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x16, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xa8, 0x05, 0x0a, 0x15,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x72, 0x63, 0x48, 0x6f, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x72, 0x63, 0x48, 0x6f, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x45, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x45, 0x6e, 0x64, 0x12, 0x4e, 0x0a, 0x0b, 0x6a, 0x6f, 0x62, 0x73, 0x4f, 0x6b, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6e, 0x77, 0x70, 0x64, 0x2e,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4a, 0x6f, 0x62, 0x73, 0x4f, 0x6b, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x6a, 0x6f, 0x62, 0x73, 0x4f, 0x6b, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x57, 0x0a, 0x0e, 0x6a, 0x6f, 0x62, 0x73, 0x4e, 0x6f, 0x74, 0x4f, 0x6b,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6e, 0x77,
	0x70, 0x64, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x62, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4a, 0x6f, 0x62, 0x73, 0x4e, 0x6f, 0x74,
	0x4f, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x6a, 0x6f,
	0x62, 0x73, 0x4e, 0x6f, 0x74, 0x4f, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x57, 0x0a, 0x0e,
	0x6d, 0x65, 0x61, 0x6e, 0x4f, 0x6b, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6e, 0x77, 0x70, 0x64, 0x2e, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x4d, 0x65, 0x61, 0x6e, 0x4f, 0x6b, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x6d, 0x65, 0x61, 0x6e, 0x4f, 0x6b, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x3e, 0x0a, 0x10, 0x4a, 0x6f, 0x62, 0x73, 0x4f, 0x6b, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x41, 0x0a, 0x13, 0x4a, 0x6f, 0x62, 0x73, 0x4e, 0x6f, 0x74,
	0x4f, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5c, 0x0a, 0x13, 0x4d, 0x65, 0x61, 0x6e,
	0x4f, 0x6b, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa5, 0x02, 0x0a, 0x0b, 0x4f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x72, 0x63, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x72, 0x63, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x74, 0x48, 0x6f,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x74, 0x48, 0x6f,
	0x73, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x35, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6f,
	0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x31, 0x0a, 0x06, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0xd8,
	0x01, 0x0a, 0x0e, 0x49, 0x6e, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x72, 0x63, 0x48, 0x6f,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x72, 0x63, 0x48, 0x6f, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x12, 0x26, 0x0a,
	0x0e, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x69, 0x6c, 0x6c, 0x69, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4d,
	0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x22, 0x23, 0x0a, 0x0b, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x41, 0x72, 0x72, 0x61, 0x79, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x72, 0x72, 0x61,
	0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x22, 0x33,
	0x0a, 0x09, 0x49, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x32, 0xc6, 0x01, 0x0a, 0x0c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x6e, 0x77, 0x70, 0x64, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6e, 0x77, 0x70, 0x64, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x6e, 0x77, 0x70, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x6e, 0x77, 0x70, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3e, 0x5a, 0x3c,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x61, 0x72, 0x64, 0x65,
	0x6e, 0x65, 0x72, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2d, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x2d, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6e, 0x77, 0x70, 0x64, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_common_nwpd_nwpd_proto_rawDescOnce sync.Once
	file_pkg_common_nwpd_nwpd_proto_rawDescData = file_pkg_common_nwpd_nwpd_proto_rawDesc
)

func file_pkg_common_nwpd_nwpd_proto_rawDescGZIP() []byte {
	file_pkg_common_nwpd_nwpd_proto_rawDescOnce.Do(func() {
		file_pkg_common_nwpd_nwpd_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_common_nwpd_nwpd_proto_rawDescData)
	})
	return file_pkg_common_nwpd_nwpd_proto_rawDescData
}

var file_pkg_common_nwpd_nwpd_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_pkg_common_nwpd_nwpd_proto_goTypes = []interface{}{
	(*GetObservationsRequest)(nil),            // 0: nwpd.GetObservationsRequest
	(*GetObservationsResponse)(nil),           // 1: nwpd.GetObservationsResponse
	(*GetAggregatedObservationsResponse)(nil), // 2: nwpd.GetAggregatedObservationsResponse
	(*AggregatedObservation)(nil),             // 3: nwpd.AggregatedObservation
	(*Observation)(nil),                       // 4: nwpd.Observation
	(*IntObservation)(nil),                    // 5: nwpd.IntObservation
	(*Int64Arrays)(nil),                       // 6: nwpd.Int64Arrays
	(*IntString)(nil),                         // 7: nwpd.IntString
	nil,                                       // 8: nwpd.AggregatedObservation.JobsOkCountEntry
	nil,                                       // 9: nwpd.AggregatedObservation.JobsNotOkCountEntry
	nil,                                       // 10: nwpd.AggregatedObservation.MeanOkDurationEntry
	(*timestamppb.Timestamp)(nil),             // 11: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),               // 12: google.protobuf.Duration
}
var file_pkg_common_nwpd_nwpd_proto_depIdxs = []int32{
	11, // 0: nwpd.GetObservationsRequest.start:type_name -> google.protobuf.Timestamp
	11, // 1: nwpd.GetObservationsRequest.end:type_name -> google.protobuf.Timestamp
	12, // 2: nwpd.GetObservationsRequest.aggregationWindow:type_name -> google.protobuf.Duration
	4,  // 3: nwpd.GetObservationsResponse.observations:type_name -> nwpd.Observation
	3,  // 4: nwpd.GetAggregatedObservationsResponse.aggregatedObservations:type_name -> nwpd.AggregatedObservation
	11, // 5: nwpd.AggregatedObservation.periodStart:type_name -> google.protobuf.Timestamp
	11, // 6: nwpd.AggregatedObservation.periodEnd:type_name -> google.protobuf.Timestamp
	8,  // 7: nwpd.AggregatedObservation.jobsOkCount:type_name -> nwpd.AggregatedObservation.JobsOkCountEntry
	9,  // 8: nwpd.AggregatedObservation.jobsNotOkCount:type_name -> nwpd.AggregatedObservation.JobsNotOkCountEntry
	10, // 9: nwpd.AggregatedObservation.meanOkDuration:type_name -> nwpd.AggregatedObservation.MeanOkDurationEntry
	11, // 10: nwpd.Observation.timestamp:type_name -> google.protobuf.Timestamp
	12, // 11: nwpd.Observation.duration:type_name -> google.protobuf.Duration
	12, // 12: nwpd.Observation.period:type_name -> google.protobuf.Duration
	12, // 13: nwpd.AggregatedObservation.MeanOkDurationEntry.value:type_name -> google.protobuf.Duration
	0,  // 14: nwpd.AgentService.GetObservations:input_type -> nwpd.GetObservationsRequest
	0,  // 15: nwpd.AgentService.GetAggregatedObservations:input_type -> nwpd.GetObservationsRequest
	1,  // 16: nwpd.AgentService.GetObservations:output_type -> nwpd.GetObservationsResponse
	2,  // 17: nwpd.AgentService.GetAggregatedObservations:output_type -> nwpd.GetAggregatedObservationsResponse
	16, // [16:18] is the sub-list for method output_type
	14, // [14:16] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_pkg_common_nwpd_nwpd_proto_init() }
func file_pkg_common_nwpd_nwpd_proto_init() {
	if File_pkg_common_nwpd_nwpd_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_common_nwpd_nwpd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObservationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_common_nwpd_nwpd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObservationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_common_nwpd_nwpd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAggregatedObservationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_common_nwpd_nwpd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregatedObservation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_common_nwpd_nwpd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Observation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_common_nwpd_nwpd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntObservation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_common_nwpd_nwpd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Int64Arrays); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_common_nwpd_nwpd_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_common_nwpd_nwpd_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_common_nwpd_nwpd_proto_goTypes,
		DependencyIndexes: file_pkg_common_nwpd_nwpd_proto_depIdxs,
		MessageInfos:      file_pkg_common_nwpd_nwpd_proto_msgTypes,
	}.Build()
	File_pkg_common_nwpd_nwpd_proto = out.File
	file_pkg_common_nwpd_nwpd_proto_rawDesc = nil
	file_pkg_common_nwpd_nwpd_proto_goTypes = nil
	file_pkg_common_nwpd_nwpd_proto_depIdxs = nil
}
